(()=>{var e={};e.id=696,e.ids=[696],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9076:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>l,serverHooks:()=>c,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>d});var s={};r.r(s),r.d(s,{POST:()=>u});var a=r(6559),o=r(8088),n=r(7719),i=r(2190);async function u(e){try{let{walletAddress:t}=await e.json();if(!t||!/^0x[a-fA-F0-9]{40}$/.test(t))return console.log("Invalid wallet address:",t),i.NextResponse.json({success:!1,error:"Invalid wallet address"},{status:400});let r=i.NextResponse.json({success:!0});return r.cookies.set("walletAddress",t,{httpOnly:!0,path:"/",maxAge:3600}),console.log(`Set wallet address cookie: ${t}`),r}catch(e){return console.error("Error setting wallet address:",e),i.NextResponse.json({success:!1,error:"Server error"},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/set-wallet/route",pathname:"/api/set-wallet",filename:"route",bundlePath:"app/api/set-wallet/route"},resolvedPagePath:"/home/kreed/CERTHUBDEPLOYMENT_TEST/frontend3/CERTHUB-creation/app/api/set-wallet/route.ts",nextConfigOutput:"standalone",userland:s}),{workAsyncStorage:p,workUnitAsyncStorage:d,serverHooks:c}=l;function x(){return(0,n.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:d})}},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(9076));module.exports=s})();